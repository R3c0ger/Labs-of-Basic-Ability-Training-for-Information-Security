# 公钥{n,e} = {920139713,19}
# 拆分后加密的密文：704796792, 752211152, 274704164, 18414022, 368270835, 483295235, 263072905, 459788476, 483295235,
# 459788476, 663551792, 475206804, 459788476, 428313374, 475206804, 459788476, 425392137, 704796792, 458265677,
# 341524652, 483295235, 534149509, 425392137, 428313374, 425392137, 341524652, 458265677, 263072905, 483295235,
# 828509797, 341524652, 425392137, 475206804, 428313374, 483295235, 475206804, 459788476, 306220148
# 请撰写对上述密文进行RSA解密的脚本代码：
import math

# 公钥和密文数据
n = 920139713
e = 19
ciphertext = [704796792, 752211152, 274704164, 18414022, 368270835, 483295235, 263072905,
              459788476, 483295235, 459788476, 663551792, 475206804, 459788476, 428313374,
              475206804, 459788476, 425392137, 704796792, 458265677, 341524652, 483295235,
              534149509, 425392137, 428313374, 425392137, 341524652, 458265677, 263072905,
              483295235, 828509797, 341524652, 425392137, 475206804, 428313374, 483295235,
              475206804, 459788476, 306220148]

# 求p,q
p = 0
q = 0
for i in range(2, int(math.sqrt(n)) + 1):
    if n % i == 0:
        p = i
        q = int(n / i)
        break
# print("p = ", p)
# print("q = ", q)

# 求f(n)
f = (p - 1) * (q - 1)
# print("f = ", f)

# 求d
d = 0
for i in range(1, n):
    if (e * i) % f == 1:
        d = i
        break
# print("d = ", d)

# 解密
plaintext = ""
for i in ciphertext:
    plaintext += chr(pow(int(i),d,n))
print("plaintext = ", plaintext)

